# Generated by Django 2.0 on 2017-12-08 15:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('album', '0001_initial'),
        ('app', '0004_schedule_service'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactsPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Название заголовка во вкладке', max_length=100, verbose_name='Заголовок')),
                ('meta', models.TextField(blank=True, max_length=300, null=True, verbose_name='META-описание сайта')),
                ('content', models.TextField(blank=True, max_length=300, null=True, verbose_name='Контент страницы')),
                ('scripts', models.TextField(blank=True, help_text='Можно вставить код метрик, который будет работать только на текущей странице.', max_length=4085, null=True, verbose_name='Скрипты')),
            ],
            options={
                'verbose_name': 'Страница "Контакты"',
                'verbose_name_plural': 'Страница "Контакты"',
                'db_table': 'data_contacts_page',
            },
        ),
        migrations.CreateModel(
            name='Home',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Название заголовка во вкладке', max_length=100, verbose_name='Заголовок')),
                ('meta', models.TextField(blank=True, max_length=300, null=True, verbose_name='META-описание сайта')),
                ('content', models.TextField(blank=True, max_length=300, null=True, verbose_name='Контент страницы')),
                ('scripts', models.TextField(blank=True, help_text='Можно вставить код метрик, который будет работать только на текущей странице.', max_length=4085, null=True, verbose_name='Скрипты')),
                ('main_title', models.CharField(help_text='Главный заголовок на домшней странице', max_length=150, verbose_name='Главный заголовок')),
                ('jumbotron_video', models.TextField(blank=True, help_text='Элемент идущий после главного заголовка - это может быть картинка, либо видео и т.д. Будет выбрано либо видео, либо изображение.', max_length=1024, null=True, verbose_name='Джамботрон - видое')),
                ('jumbotron_image', models.ImageField(blank=True, help_text='Элемент идущий после главного заголовка - это может быть картинка, либо видео и т.д.Будет выбрано либо видео, либо изображение.', null=True, upload_to='', verbose_name='Джамботрон - изображение')),
                ('is_image', models.BooleanField(default=False, verbose_name='Отобразить избражение?')),
                ('is_video', models.BooleanField(default=True, verbose_name='Отобразить видео?')),
            ],
            options={
                'verbose_name': 'Главная',
                'verbose_name_plural': 'Главная',
                'db_table': 'data_home_page',
            },
        ),
        migrations.CreateModel(
            name='PricesPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Название заголовка во вкладке', max_length=100, verbose_name='Заголовок')),
                ('meta', models.TextField(blank=True, max_length=300, null=True, verbose_name='META-описание сайта')),
                ('content', models.TextField(blank=True, max_length=300, null=True, verbose_name='Контент страницы')),
                ('scripts', models.TextField(blank=True, help_text='Можно вставить код метрик, который будет работать только на текущей странице.', max_length=4085, null=True, verbose_name='Скрипты')),
            ],
            options={
                'verbose_name': 'Страница "Цены"',
                'verbose_name_plural': 'Страница "Цены"',
                'db_table': 'data_prices_page',
            },
        ),
        migrations.CreateModel(
            name='SaunaPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Название заголовка во вкладке', max_length=100, verbose_name='Заголовок')),
                ('meta', models.TextField(blank=True, max_length=300, null=True, verbose_name='META-описание сайта')),
                ('content', models.TextField(blank=True, max_length=300, null=True, verbose_name='Контент страницы')),
                ('scripts', models.TextField(blank=True, help_text='Можно вставить код метрик, который будет работать только на текущей странице.', max_length=4085, null=True, verbose_name='Скрипты')),
                ('name', models.CharField(max_length=150, verbose_name='Название сауны')),
                ('gallery', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='album.Album', verbose_name='Галерея фотографий')),
                ('schedule', models.ManyToManyField(related_name='sauna_schedule', to='app.Schedule', verbose_name='Расписание')),
                ('services', models.ManyToManyField(related_name='sauna_services', to='app.Service', verbose_name='Список услуг')),
            ],
            options={
                'verbose_name': 'Сауна',
                'verbose_name_plural': 'Стараницы "Сауна"',
                'db_table': 'data_sauna_page',
            },
        ),
        migrations.CreateModel(
            name='ServicesPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Название заголовка во вкладке', max_length=100, verbose_name='Заголовок')),
                ('meta', models.TextField(blank=True, max_length=300, null=True, verbose_name='META-описание сайта')),
                ('content', models.TextField(blank=True, max_length=300, null=True, verbose_name='Контент страницы')),
                ('scripts', models.TextField(blank=True, help_text='Можно вставить код метрик, который будет работать только на текущей странице.', max_length=4085, null=True, verbose_name='Скрипты')),
                ('sauna', models.ManyToManyField(help_text='Сауны, который будут отображены в услугах', related_name='shown_services_sauna', to='pages.SaunaPage', verbose_name='Сауны')),
            ],
            options={
                'verbose_name': 'Станица "Услуги"',
                'verbose_name_plural': 'Страница "Услуги"',
                'db_table': 'data_services_page',
            },
        ),
        migrations.AddField(
            model_name='pricespage',
            name='sauna',
            field=models.ManyToManyField(help_text='Сауны, чьи цены и расписание будут отображенны на странице цен.', related_name='shown_prices_sauna', to='pages.SaunaPage', verbose_name='Сауны'),
        ),
    ]
